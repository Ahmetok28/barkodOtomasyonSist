<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAABIFJREFUWEfd
        WM9vG0UUNoIT8G+ABEgc4B/gBELC+8NJLrSFpqL0gtQkJBHx7tpuDzGkuCVpJS7NoVygKe0Be3+5qKEp
        bSolleAAcWrapEmaoqa4ie21q9rJ8J4zKzvxyPWu1xHikz7Jsmfe+zwzb+a95/vfQvgi8TY3pA2KimkG
        QsaiIOuWIGuFbeoWfhcIJQ0uqA74g/G36LT2oisy+TII+DwQMpc7QsnCp2OzxcFzaRK+sEKG42skGn9U
        IX4OT6yQge/S5PDYTDEQSRbgjyxxktr3br/5EjXnHd6JTL7AK1o/rEyuOzZtyT8skRP6Y+B6k3xM5O/v
        kYOx6TzaEGW9F21S863BrxhviIp+50D0mnX80gOGc2c8fmmV7I9OWYJipPkh7XXqxh14WesUJK3QN57a
        HNHYDt0QbfWMz22ibUFSO6g7Z+BlozugJAt4llhOvGBoYpmIilHkg9pH1G1z4CVdhEAoHrvY+pY+i5GL
        qyQAIgOyzlH3jSHKidfgfFhh+Hcsg+2gcn6J4NUkDqmvUhlsYGTh4cUzxzLUTvac/XMTtnu+q2vieSqn
        Hrxk9u//8lqBZaDdxMDZF52CS944SuXsBF6gsMzZY3AmWAa8YsxYJ6d/3mD+FvlxlQiKvuGPxF+ksqrg
        FLXvUOxmnjXRK54018ndhyWSsTbJt1eyzDHdJ2/m4PrpobJskOdg/+/jk8Wa5AVx5VIPnhIba9kyGb1c
        v5L06lmiwrbBBfU3OyPJ3O7BXtFeuVpM//WEORbPYmf4cm7HKwNLOnjkzK0ia0KrPOVAnM0jY7MFERIL
        Ks/ng9TIwMyDNbgVuhGHHDh3m0CqlqDyQCDsefjCfeZgt3QrDomxAIu2QOVVkgIr+tMac7AbYkDM/10N
        CMStxebEIYdBiygbOSoPBAa18oiWYQ6uZeJ3iyz/U2JGn83Kyq25WzmbX6kZgpqoPIhiSS2PqI0T0MRv
        Ftna2na4kmFfEV6IQ1YESlqJymtui6fmi9TlNhYflcipZFUkbuvtXds6u+BcHLJui/FANhMkV+Z2ilzJ
        lMg3INKrlbNZCZKweYfKc3bN/JreKXIBhHm1cjbrrhleVnsPj840ncVc3yWyFq2KQ4IWi5O0z6i86lPn
        pO64nn5CJVXhhTjmU4eAy3pRPu8si56sOZM3WjhztcSSFrTcpbKqwHQLa17WpEb8JVX0TBzy4NdQO9en
        W9WEFetW1sS9YMOEFcFDxQ9FdZY1ud3Es/fh8NUNWL1qcOwGFk1YuPSOp8osI+0kFE1l8D3XsGhCVMpO
        KAH/k2WnDf+QJsC/sfaqcEdf8Pb6qfvmwEn6x2IIC/h2tz7MgiAZB6hbZ/AHtfcxsqGQLzm5xJ9FtNVz
        9o8S2uaDifeoO3fAcwErOY/R7VX7bV/0ahbEpT6Q469QN60Boxu7o3AFZLEJ6baB2R27kQNhG4KsHvWs
        gVkLuwWM7dyOkJnHR722BYxbh6xtAX8yOpMPwFhBMe+1rQXMgt1Ex1QN305e0vNcUCXALfyM3+Fve9pE
        33v4fP8CE2JoXZZy+G8AAAAASUVORK5CYII=
</value>
  </data>
</root>